{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "DB,RDSPostgres,v1.0,PostgreSQL RDS Template. beta-fdp-1p7mq4sr4",
  "Parameters": {
    "DBName": {
      "Default": "pgdb",
      "Description": "The database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "8",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBUsername": {
      "Default": "root",
      "NoEcho": "true",
      "Description": "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "Default": "root1234",
      "NoEcho": "true",
      "Description": "The database admin account password",
      "Type": "String",
      "MinLength": "8"
    },
    "DBClass": {
      "Default": "db.m6g.large",
      "Description": "Database instance class",
      "Type": "String",
      "AllowedValues": [
 
        "db.m4.large",
        "db.m6g.large"
      ],
      "ConstraintDescription": "must select a valid database instance type."
    },
    "DBAllocatedStorage": {
      "Default": "5",
      "Description": "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "6144",
      "ConstraintDescription": "must be between 5+"
    },
    "PrivateSubnetID": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "List Id of existing Private subnets ",
      "ConstraintDescription": "Must be an existing Private subnets."
    },
    "VPC": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "VPC ID"
    }
  },
  "Resources": {
    "myDBEC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Frontend Access",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 5432,
            "ToPort": 5432,
            "CidrIp": "10.0.0.0/16"
          }
        ]
      }
    },
    "myDBParamGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": "Database Parameter Group + pg_stat_statements",
        "Family": "postgres16",
        "Parameters": {
          "shared_preload_libraries": "pg_stat_statements"
        }
      }
    },
    "myDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "DB Private Subnet",
        "SubnetIds": {
          "Ref": "PrivateSubnetID"
        }
      }
    },
    "pgDB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBName": {
          "Ref": "DBName"
        },
        "AllocatedStorage": {
          "Ref": "DBAllocatedStorage"
        },
        "DBInstanceClass": {
          "Ref": "DBClass"
        },
        "Engine": "postgres",
        "MasterUsername": {
          "Ref": "DBUsername"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "DBSubnetGroupName": {
          "Ref": "myDBSubnetGroup"
        },
        "DBParameterGroupName": {
          "Ref": "myDBParamGroup"
        },
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "myDBEC2SecurityGroup",
              "GroupId"
            ]
          }
        ]
      }
    }
  },
  "Outputs": {
    "JDBCConnectionString": {
      "Description": "JDBC connection string for database",
      "Value": {
        "Fn::Join": [
          "",
          [
            "jdbc:postgresql://",
            {
              "Fn::GetAtt": [
                "pgDB",
                "Endpoint.Address"
              ]
            },
            ":",
            {
              "Fn::GetAtt": [
                "pgDB",
                "Endpoint.Port"
              ]
            },
            "/",
            {
              "Ref": "DBName"
            }
          ]
        ]
      }
    }
  }
}